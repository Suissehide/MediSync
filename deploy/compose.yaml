version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: deploy/app/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
        NODE_VERSION: ${NODE_VERSION}
        NPM_VERSION: ${NPM_VERSION}
      target: app
    image: "${CONTAINER_REGISTRY_PREFIX}${APP_IMAGE_NAME}:${VERSION:-latest}"
    container_name: "${APP_IMAGE_NAME}"
    ports:
      - '${PORT}:${PORT}'
    profiles:
      - backend
    healthcheck:
      test: node -e "require('http').get({hostname:'localhost',port:${PORT},path:'/health',timeout:3000})"
      retries: 3
      timeout: 3s
    environment:
      - CORS_ORIGIN
      - DATABASE_URL
      - HOST
      - JWT_SECRET
      - JWT_REFRESH_SECRET
      - JWT_EXPIRES_IN
      - JWT_REFRESH_EXPIRES_IN
      - LOG_LEVEL
      - NODE_CLUSTER
      - NODE_ENV=production
      - NODE_TLS_REJECT_UNAUTHORIZED
      - PORT
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${APP_IMAGE_NAME}.rule=Host(`${TRAEFIK_APP_VIRTUAL_HOST:-${APP_IMAGE_NAME}.localdomain}`)"
      - "traefik.http.routers.${APP_IMAGE_NAME}.entrypoints=${TRAEFIK_APP_ENTRYPOINTS:-web}"
      - "traefik.http.routers.${APP_IMAGE_NAME}.tls=${TRAEFIK_APP_TLS:-false}"
      - "traefik.http.routers.${APP_IMAGE_NAME}.tls.certresolver=${TRAEFIK_APP_CERT_RESOLVER:-letsencrypt}"
      - "traefik.http.services.${APP_IMAGE_NAME}.loadbalancer.server.port=${PORT}"
    network_mode: "${DOCKER_NETWORK_MODE}"
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped


  postgres:
    container_name: postgres
    image: postgres:16.2-alpine
    profiles:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB_NAME -U postgres"]
    network_mode: "${DOCKER_NETWORK_MODE}"
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_NAME}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data


volumes:
  postgres:
    driver: local
